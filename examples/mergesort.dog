fn merge (a,b) {
	len_a = { len $a };
	len_b = { len $b };
	c = "";
	while { and { gt $len_a 0 } { gt $len_b 0 } } {
		first_a = { first $a 1 };
		first_b = { first $b 1 };
		if { leq $first_a $first_b } {
			len_a = { sub $len_a 1 };
			c = { append $c $first_a };
			a = { last $a $len_a };
		}
		else {
			len_b = { sub $len_b 1 };
			c = { append $c $first_b };
			b = { last $b $len_b };
		}
	}
	c = { append $c $a };
	c = { append $c $b };
	put $c
}

fn mergesort (arr) {
	len = { len $arr };
	if { leq $len 1 } {
		return $arr;
	}
	hlen = { div $len 2 };
	left = { first $arr { floor $hlen } };
	right = { last $arr { ceil $hlen } };
	merge { mergesort $left } { mergesort $right };
}

list = {
	put 34  5 21 12 37 54 59 79 92 98 43 99 17 46 80 62 52 47 84 38
	    93 96  9 14 32 86 61 74 70 48 23 81 69 33  8 77 90 75 65 83
	    30 25 82 41 22 63 76 44 66 36 45 26 29 51 67 35 16 31 20 57
	    11 40 68 85 87 72 10 49 64 71 39 58 24 53 97  6 56 42 60 13
	    78 50 95  0 88  7 91  3 94 19 89 27 15 55 73  2 28  4 18  1
};

pln "Unsorted: $list";
list = { mergesort $list };
pln "Sorted: $list"